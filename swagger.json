{
  "openapi": "3.0.1",
  "info": {
    "title": "ElectionSystem",
    "version": "1.0"
  },
  "paths": {
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Candidates": {
      "get": {
        "tags": [
          "Candidates"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Candidates"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCandidateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCandidateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCandidateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Candidates/{id}": {
      "get": {
        "tags": [
          "Candidates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Candidates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCandidateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCandidateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCandidateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Candidates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ElectionResult": {
      "get": {
        "tags": [
          "ElectionResult"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Elections": {
      "get": {
        "tags": [
          "Elections"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ElectionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ElectionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ElectionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Elections"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Election"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Election"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Election"
                }
              }
            }
          }
        }
      }
    },
    "/api/Elections/{id}": {
      "get": {
        "tags": [
          "Elections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Elections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Elections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Voters": {
      "get": {
        "tags": [
          "Voters"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voter"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voter"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Voters"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Voter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Voter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Voters/{id}": {
      "get": {
        "tags": [
          "Voters"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Voters"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Voting": {
      "get": {
        "tags": [
          "Voting"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Voting"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VotingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VotingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VotingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Voting/results": {
      "get": {
        "tags": [
          "Voting"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Candidate": {
        "required": [
          "electionId",
          "name",
          "voteCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "party": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "voteCount": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "imageDataType": {
            "type": "string",
            "nullable": true
          },
          "addedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "addedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "electionId": {
            "type": "integer",
            "format": "int32"
          },
          "election": {
            "$ref": "#/components/schemas/Election"
          }
        },
        "additionalProperties": false
      },
      "CreateCandidateDto": {
        "required": [
          "name",
          "voteCount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "party": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "voteCount": {
            "type": "integer",
            "format": "int32"
          },
          "electionId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "imageDataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateOnly": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Election": {
        "required": [
          "electionType",
          "endDate",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "electionType": {
            "$ref": "#/components/schemas/ElectionType"
          },
          "provinces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Province"
            },
            "nullable": true
          },
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            },
            "nullable": true
          },
          "supervisorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supervisor": {
            "$ref": "#/components/schemas/User"
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByUser": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "ElectionDto": {
        "required": [
          "electionType",
          "endDate",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "electionType": {
            "$ref": "#/components/schemas/ElectionType"
          }
        },
        "additionalProperties": false
      },
      "ElectionType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "LoginDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Province": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "electionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "election": {
            "$ref": "#/components/schemas/Election"
          },
          "voters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Voter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "required": [
          "dateOfBirth",
          "electionType",
          "email",
          "name",
          "nationalId",
          "nationalIdPhoto",
          "password",
          "provinceId",
          "selfiePhoto"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "nationalId": {
            "maxLength": 14,
            "minLength": 0,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "electionType": {
            "$ref": "#/components/schemas/ElectionType"
          },
          "nationalIdPhoto": {
            "minLength": 1,
            "type": "string"
          },
          "nationalIdPhotoDataType": {
            "type": "string",
            "nullable": true
          },
          "selfiePhoto": {
            "minLength": 1,
            "type": "string"
          },
          "selfiePhotoDataType": {
            "type": "string",
            "nullable": true
          },
          "provinceId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "voter": {
            "$ref": "#/components/schemas/Voter"
          },
          "supervisedElections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Election"
            },
            "nullable": true
          },
          "createdElections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Election"
            },
            "nullable": true
          },
          "addedCandidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Voter": {
        "required": [
          "electionType",
          "name",
          "nationalId",
          "nationalIdPhoto",
          "selfiePhoto"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "nationalId": {
            "maxLength": 14,
            "minLength": 0,
            "type": "string"
          },
          "electionType": {
            "$ref": "#/components/schemas/ElectionType"
          },
          "selfiePath": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "idCardPath": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hasVoted": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "nationalIdPhoto": {
            "type": "string",
            "format": "byte"
          },
          "nationalIdPhotoDataType": {
            "type": "string",
            "nullable": true
          },
          "selfiePhoto": {
            "type": "string",
            "format": "byte"
          },
          "selfiePhotoDataType": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "provinceId": {
            "type": "integer",
            "format": "int32"
          },
          "province": {
            "$ref": "#/components/schemas/Province"
          }
        },
        "additionalProperties": false
      },
      "VotingDto": {
        "required": [
          "candidateId",
          "selfiePhoto"
        ],
        "type": "object",
        "properties": {
          "candidateId": {
            "type": "integer",
            "format": "int32"
          },
          "selfiePhoto": {
            "minLength": 1,
            "type": "string"
          },
          "selfiePhotoDataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}